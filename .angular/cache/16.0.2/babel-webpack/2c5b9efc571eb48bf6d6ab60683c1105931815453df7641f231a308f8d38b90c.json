{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet TutorialDetailsComponent = class TutorialDetailsComponent {\n  constructor(tutorialService, route, router) {\n    this.tutorialService = tutorialService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentTutorial = {\n      nama: '',\n      deksripsi: '',\n      selesai: false\n    };\n    this.message = '';\n  }\n  ngOnInit() {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getTutorial(this.route.snapshot.params['id']);\n    }\n  }\n  getTutorial(id) {\n    this.tutorialService.get(id).subscribe({\n      next: data => {\n        this.currentTutorial = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateTutorial() {\n    this.message = '';\n    this.tutorialService.update(this.currentTutorial.id, this.currentTutorial).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  deleteTutorial() {\n    this.tutorialService.delete(this.currentTutorial.id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate(['/todos']);\n      },\n      error: e => console.error(e)\n    });\n  }\n};\n__decorate([Input()], TutorialDetailsComponent.prototype, \"viewMode\", void 0);\n__decorate([Input()], TutorialDetailsComponent.prototype, \"currentTutorial\", void 0);\nTutorialDetailsComponent = __decorate([Component({\n  selector: 'app-tutorial-details',\n  templateUrl: './tutorial-details.component.html',\n  styleUrls: ['./tutorial-details.component.css']\n})], TutorialDetailsComponent);\nexport { TutorialDetailsComponent };","map":{"version":3,"names":["Component","Input","TutorialDetailsComponent","constructor","tutorialService","route","router","viewMode","currentTutorial","nama","deksripsi","selesai","message","ngOnInit","getTutorial","snapshot","params","id","get","subscribe","next","data","console","log","error","e","updateTutorial","update","res","deleteTutorial","delete","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Bryanne Rafa Levin\\Documents\\todolist-main-project pisah\\frontend\\src\\app\\components\\tutorial-details\\tutorial-details.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { TutorialService } from 'src/app/services/tutorial.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tutorial } from 'src/app/models/tutorial.model';\r\n\r\n@Component({\r\n  selector: 'app-tutorial-details',\r\n  templateUrl: './tutorial-details.component.html',\r\n  styleUrls: ['./tutorial-details.component.css'],\r\n})\r\nexport class TutorialDetailsComponent {\r\n  @Input() viewMode = false;\r\n\r\n  @Input() currentTutorial: Tutorial = {\r\n    nama: '',\r\n    deksripsi: '',\r\n    selesai: false\r\n  };\r\n\r\n  message = '';\r\n\r\n  constructor(\r\n    private tutorialService: TutorialService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.viewMode) {\r\n      this.message = '';\r\n      this.getTutorial(this.route.snapshot.params['id']);\r\n    }\r\n  }\r\n\r\n  getTutorial(id: string): void {\r\n    this.tutorialService.get(id).subscribe({\r\n      next: (data) => {\r\n        this.currentTutorial = data;\r\n        console.log(data);\r\n      },\r\n      error: (e) => console.error(e)\r\n    });\r\n  }\r\n\r\n  updateTutorial(): void {\r\n    this.message = '';\r\n\r\n    this.tutorialService\r\n      .update(this.currentTutorial.id, this.currentTutorial)\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          this.message = res.message\r\n            ? res.message\r\n            : 'This tutorial was updated successfully!';\r\n        },\r\n        error: (e) => console.error(e)\r\n      });\r\n  }\r\n\r\n  deleteTutorial(): void {\r\n    this.tutorialService.delete(this.currentTutorial.id).subscribe({\r\n      next: (res) => {\r\n        console.log(res);\r\n        this.router.navigate(['/todos']);\r\n      },\r\n      error: (e) => console.error(e)\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAUxD,IAAaC,wBAAwB,GAArC,MAAaA,wBAAwB;EAWnCC,YACUC,eAAgC,EAChCC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAbP,KAAAC,QAAQ,GAAG,KAAK;IAEhB,KAAAC,eAAe,GAAa;MACnCC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE;KACV;IAED,KAAAC,OAAO,GAAG,EAAE;EAMT;EAEHC,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAE;MAClB,IAAI,CAACK,OAAO,GAAG,EAAE;MACjB,IAAI,CAACE,WAAW,CAAC,IAAI,CAACT,KAAK,CAACU,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;;EAEtD;EAEAF,WAAWA,CAACG,EAAU;IACpB,IAAI,CAACb,eAAe,CAACc,GAAG,CAACD,EAAE,CAAC,CAACE,SAAS,CAAC;MACrCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACb,eAAe,GAAGa,IAAI;QAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC;MACDG,KAAK,EAAGC,CAAC,IAAKH,OAAO,CAACE,KAAK,CAACC,CAAC;KAC9B,CAAC;EACJ;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACd,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACR,eAAe,CACjBuB,MAAM,CAAC,IAAI,CAACnB,eAAe,CAACS,EAAE,EAAE,IAAI,CAACT,eAAe,CAAC,CACrDW,SAAS,CAAC;MACTC,IAAI,EAAGQ,GAAG,IAAI;QACZN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;QAChB,IAAI,CAAChB,OAAO,GAAGgB,GAAG,CAAChB,OAAO,GACtBgB,GAAG,CAAChB,OAAO,GACX,yCAAyC;MAC/C,CAAC;MACDY,KAAK,EAAGC,CAAC,IAAKH,OAAO,CAACE,KAAK,CAACC,CAAC;KAC9B,CAAC;EACN;EAEAI,cAAcA,CAAA;IACZ,IAAI,CAACzB,eAAe,CAAC0B,MAAM,CAAC,IAAI,CAACtB,eAAe,CAACS,EAAE,CAAC,CAACE,SAAS,CAAC;MAC7DC,IAAI,EAAGQ,GAAG,IAAI;QACZN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;QAChB,IAAI,CAACtB,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC;MACDP,KAAK,EAAGC,CAAC,IAAKH,OAAO,CAACE,KAAK,CAACC,CAAC;KAC9B,CAAC;EACJ;CACD;AA1DUO,UAAA,EAAR/B,KAAK,EAAE,C,yDAAkB;AAEjB+B,UAAA,EAAR/B,KAAK,EAAE,C,gEAIN;AAPSC,wBAAwB,GAAA8B,UAAA,EALpChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWjC,wBAAwB,CA2DpC;SA3DYA,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}